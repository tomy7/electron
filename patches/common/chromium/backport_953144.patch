diff --git a/content/shell/browser/shell_devtools_frontend.cc b/content/shell/browser/shell_devtools_frontend.cc
index 3b3221a..6447347 100644
--- a/content/shell/browser/shell_devtools_frontend.cc
+++ b/content/shell/browser/shell_devtools_frontend.cc
@@ -19,8 +19,8 @@
 namespace {
 static GURL GetFrontendURL() {
   int port = ShellDevToolsManagerDelegate::GetHttpHandlerPort();
-  return GURL(
-      base::StringPrintf("http://127.0.0.1:%d/devtools/inspector.html", port));
+  return GURL(base::StringPrintf(
+      "http://127.0.0.1:%d/devtools/devtools_app.html", port));
 }
 }  // namespace
 
diff --git a/third_party/WebKit/Source/devtools/BUILD.gn b/third_party/WebKit/Source/devtools/BUILD.gn
index 952b922..9e7b4bf 100644
--- a/third_party/WebKit/Source/devtools/BUILD.gn
+++ b/third_party/WebKit/Source/devtools/BUILD.gn
@@ -1048,7 +1048,6 @@
   "$resources_out_dir/cm_modes/cm_modes_module.js",
   "$resources_out_dir/emulated_devices/emulated_devices_module.js",
   "$resources_out_dir/product_registry_impl/product_registry_impl_module.js",
-  "$resources_out_dir/screencast/screencast_module.js",
 ]
 
 devtools_applications = [
diff --git a/third_party/WebKit/Source/devtools/front_end/inspector.json b/third_party/WebKit/Source/devtools/front_end/inspector.json
index 36c222f..dc2149a 100644
--- a/third_party/WebKit/Source/devtools/front_end/inspector.json
+++ b/third_party/WebKit/Source/devtools/front_end/inspector.json
@@ -1,6 +1,6 @@
 {
   "modules" : [
-    { "name": "screencast", "type": "remote" }
+    { "name": "screencast", "type": "autostart" }
   ],
   "extends": "devtools_app",
   "has_html": true
diff --git a/third_party/WebKit/Source/devtools/front_end/main/Main.js b/third_party/WebKit/Source/devtools/front_end/main/Main.js
index 4c9d9aa..e6d73b1 100644
--- a/third_party/WebKit/Source/devtools/front_end/main/Main.js
+++ b/third_party/WebKit/Source/devtools/front_end/main/Main.js
@@ -212,19 +212,8 @@
     this._registerForwardedShortcuts();
     this._registerMessageSinkListener();
 
-    // Pick first app we could instantiate (for test harness).
-    for (const extension of self.runtime.extensions(Common.AppProvider)) {
-      try {
-        const instance = await extension.instance();
-        if (instance) {
-          this._showAppUI(instance);
-          break;
-        }
-      } catch (e) {
-        console.error(e);
-      }
-    }
     Main.Main.timeEnd('Main._createAppUI');
+    this._showAppUI(await self.runtime.extension(Common.AppProvider).instance());
   }
 
   /**
